Domains :
With Vercel Acount => https://netflix-clone-k4xkewko1-chadrack-code.vercel.app/
https://netflix-clone-sable-nine.vercel.app/profile
https://vercel.com/chadrack-code/netflix-clone/5i8ktvNXC4vtDMwEcg3KZ9Bq9vAS

With Google firebase => https://netflix-clone-446c0.web.app/

DAY (2) NETFLIX CLONE
0. Introduction
Go to Project directory then do this :
Note: when createing a new App make sure it all lowercase
=> npx create-react-app netflix-clone --template redux

Note: make sure not to used Appcase first letter for naming class in css

1. SETING UP DATABASE
Go to firebase create a new Project, make sure you tick unable, by default it is anable. 

after the Project is create go to settings then click on this => </, this is where you can Register the credetial of your App. 
after u click on it, it will asked u to Register your App, give it a a name, tick where it says Also set up Firestore hosting, then click on the Register app btn, then it will give you this command => npm install -g firebase-tools, go to ur teminal and install it, then click <next> btn, then click continue, then go and click config ,then copy that firebase Config code.

(2) click on authentication,clik on Getstarted, then choose Email, then tick only on the first Enable the click save. done, now we have enable Google authentication in our Project.

(3) go to features folder => counter folder, cut the file => counterSlice.js and past it inside features folder
(4) go to app folder/store.js:
// import counterReducer from '../features/counter/counterSlice'; from this
import counterReducer from '../features/counterSlice'; to this

(5) BUILDING THE NAVBAR 
if you wanna get any picture link go to google search for the pic then right click on it and choose where it says copy image adress

(5) WORKING WITH API 
go to this site: 
https://www.themoviedb.org/settings/api
logIn then gor on the right top click on the pink round thing then a drop down will display then choose settings ,then API then give your information to generate a new API key for you 

here is the key : 30221dcc07d3e97c102c5cee98047de6
(6) download npm install axios for working with API

then i create 2 files, 1 axios.js, Request.js, axios to get the url and request to store the KEY for the API
inside theaxiso i have the API url link, then inside Request.j file i have diff kind of movies that wanna request.

then i went in the banner.js file then grab the data there 

(7) DEPLOYEMENT USING FIREBASE. THIS IS BASICLY CONNECTING OUR APP WITH FIREBASE 
=> firebase login

Note: when u are doing this, it is globally in the machin terminal, make sure all these steps your iniside the Projects Directory 
example => D:\REACT JS PROJECTS\netflix-clone

it will show this=> 
=> D:\REACT JS PROJECTS\netflix-clone firebase login
Already logged in as chadrackkyungu624@gmail.com

=> firebase init
choose y, then choose Hosting by clicking on space key on ur keyboard,

then choose an existing Projects.

? What do you want to use as your public directory? (public)    type =>  build then it enter

Configure as a single-page app (rewrite all urls to /index.html)?    type => y and it enter 
? Set up automatic builds and deploys with GitHub? (y/N)     type => n it enter. 
Done
 

 (8) AFTER CONNECTING, NOW WE ARE BUNDLING OUR APP AND PASS IT TO FIREBASE
 Note: to do this make sure u are inside your Project Directory
 Example: D:\REACT JS PROJECTS\netflix-clone>
 => npm run build

 Done!!

 (9) DEPLOY NOW 
 => firebase deploy 100% successfull

 DAY (3) AUTHENTICATION 
 make sure you have firebase.js file in your project
 now install:
 => npm install firebase
 => npm install react-router-dom //=> this is for navigating between screens

 (1) building the sign up screen
 (2) Implementing the Authentication 
 i first do the connetion inside the file firebase.js 
 then i use it inside the SignUpScreen.js ,
 then now I'm using it inside the App.js to check if the user was logIn already he/she go to home page even whe he refresh the as long as is login already he should be go to home page already.

 (3) IMPLEMENTING REDUX TO PASS THE USER ACTION, WHICH IS LOGIN & LOGOUT
 Note: after we have the user information, now we know that the user as logIn or logout, we need to pass the logIn info inside the All 
 App so that we ca do something with that information.

 we create the Redux inside /features/userSlice.js, then we store our redux inside /app/store.js, then we pass the store to the Entire App, inside index.js file, remember if you use next.js, some of these steps are done already. 

Next is to pass that action to our redux userSlice.js, the action will be taken from App.js file then pass to userSlice.js.

(4) create a ProfileScreen.js file, when the user logIn we want him to go first to this screen then subscribs, after that it will take hime to movies screen.



DAY (4) IMPLEMENTING STRIPE 
first Go to firebase click on {cloud Firestore/Firestore Database} -> Get Started -> Test Mode -> Enable -> save 
this is where we will store the users payment information like we did with the Authentication we create a authentication store so that when the user signeUp it take the email and store it there.

Note: Make sure you chose the right Project in this case it Netflix-clone

After creating the Firestore database 
go back to home screen Firebase, then click on the last icon, hover on it u will see it is written Extensions -> clik on it -> click on Explore All Extensions -> then go down where it written  -> Run Subscription Payments with Stripe -> click install it will redirect you to choose ur Project , then choose the project, then click on Next -> it will asked u to change to Pay Account then click on upgrade project to continue

after you create the plan also put the badget,this will Alert u every time the amount that the charge u exeed the one u put, in my case i put only 1$, then click next -> on step 4 Go on the Drop down where it says do not Sync, upgrade to Sync. 
then where it says => Stripe API key with restricted access Description, go to stripe and login into your Account, then go on the left on Top and click new Account it will aloow you to create an Account for your Project then after that go where it says Developer to take that key that the key you gonna use on your google firebase where it say key 
 
 Note: this one it the key for the test mode not for Production if u want for production u will simple switch to production mode, note production will charge for all the transactions.
 Copy that secret key on stripe then go and past it on stepp 4 on google firebase on that step u are currently on. the go live the last one just like that then click install extension.

After it done Connecting click on Getstarted then it will give u some code copy those code they look like this 
copy it go to => firestore database the click on Rules then replace that code with this one that u copy.

the one bellow.

 rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /customers/{uid} {
      allow read: if request.auth.uid == uid;

      match /checkout_sessions/{id} {
        allow read, write: if request.auth.uid == uid;
      }
      match /subscriptions/{id} {
        allow read: if request.auth.uid == uid;
      }
    }

    match /products/{id} {
      allow read: if true;

      match /prices/{id} {
        allow read: if true;
      }

      match /tax_rates/{id} {
        allow read: if true;
      }
    }
  }
}

after copying the code Above copy the :URL : https://us-central1-netflix-clone-446c0.cloudfunctions.net/ext-firestore-stripe-subscriptions-handleWebhookEvents

then go to ur strip under developer click on WebHook then click on add then add the likn that u copy in this case it this one => https://us-central1-netflix-clone-446c0.cloudfunctions.net/ext-firestore-stripe-subscriptions-handleWebhookEvents ,the where it says selet add all this bellow:

product.created
product.updated
product.deleted
price.created
price.updated
price.deleted
checkout.session.completed
customer.subscription.created
customer.subscription.updated
customer.subscription.deleted
tax_rate.created (optional)
tax_rate.updated (optional)

after adding all of this it will give u a key, copy that key, go to ur firebase,on the last icon call Extension then,click where it written maged then click on Reconfigure extension, it will popUp a form go to the last form where it says {FILL_IN_FROM_POSTINSTALL} then replace it to the webhook key from stripe : whsec_4zAnNiiUXcwRNAvDRE8qdBVWwUU1xBkf

 then click save

 when it done saving, go back to stripe AND click on Products, => then cick Add Products, on the first input
 ,Last name  type in {Basic Plan} , on the description type in 720p
on Pricing 
leave Standard Pricing 
Rate => change it in rand then after that don't tick that last one, then click on {Save and  add another}